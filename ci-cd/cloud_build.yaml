steps:
# Copy config files
- name: 'gcr.io/cloud-builders/git'
  args: 
  - 'clone'
  - 'https://github.com/tarrade/proj_DL_models_and_pipelines_with_GCP'
  id: Clone Github
- name: 'gcr.io/cloud-builders/gsutil'
  args: 
  - 'cp'
  - 'gs://${_BUCKET}/scripts/known_hosts'
  - 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/.'
  id: Copy host for git
- name: 'gcr.io/cloud-builders/gsutil'
  args: 
  - 'cp'
  - 'gs://${_BUCKET}/scripts/id_rsa.enc'
  - 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/.'
  id: Copy private key git
- name: 'gcr.io/cloud-builders/gsutil'
  args: 
  - 'cp'
  - 'gs://${_BUCKET}/scripts/.gitconfig'
  - 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/.'
  id: Copy git config file
- name: 'gcr.io/cloud-builders/gsutil'
  args: 
  - 'cp'
  - 'gs://${_BUCKET}/scripts/.condarc'
  - 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/.'
  id: Copy conda config file
- name: 'gcr.io/cloud-builders/gsutil'
  args: 
  - 'cp'
  - 'gs://${_BUCKET}/scripts/pip.conf'
  - 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/.'
  id: Copy pip config file
- name: 'gcr.io/cloud-builders/gsutil'
  args: 
  - 'cp'
  - 'gs://${_BUCKET}/scripts/base.yml'
  - 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/.'
  id: Copy base env   
- name: 'gcr.io/cloud-builders/gsutil'
  args: 
  - 'cp'
  - 'gs://${_BUCKET}/scripts/environment.yml'
  - 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/.'
  id: Copy env 

# Decrypt the file containing the key
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --ciphertext-file=proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=fabien-keyring
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: Decrypt the file containing the key

# Set up git with key and domain
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.axa.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}/known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: Set up git with key and domain

# Build docker image
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/${_DOCKERFILE}:${_TAG}'
  - '.'
  id: Build the Docker image
  dir: 'proj_DL_models_and_pipelines_with_GCP/docker/${_DOCKERFILE}'

# Push image in Container Registry  
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'push'
  - 'gcr.io/$PROJECT_ID/${_DOCKERFILE}:${_TAG}'
  id: Push the image in ContainerRegistry

- name: 'debian'
  args: 
  - 'ls'
  - '-la'
  id: List files

# Deploy (add , '--verbosity', 'debug' for more info)
- name: 'gcr.io/cloud-builders/gcloud'
  id: Deploy the AI Platform Notebook instance
  args: 
  - 'deployment-manager'
  - 'deployments'
  - 'create'
  - '${_NAME_INSTANCE}'
  - '--template'
  - 'notebook-instance-optimized-template.jinja'
  - '--properties'
  - 'network:${_NETWORK},subnet:${_SUBNET},container:gcr.io/$PROJECT_ID/${_DOCKERFILE}:${_TAG},owner-tag:${_OWNER}'
  dir: 'proj_DL_models_and_pipelines_with_GCP/deployment'

substitutions:
    _BUCKET: not-defined
    _TAG: dev
    _NAME_INSTANCE: test
    _DOCKERFILE: derived-pytorch-cpu
    _NETWORK: network
    _SUBNET: subnet
    _OWNER: name

timeout: '1600s'
