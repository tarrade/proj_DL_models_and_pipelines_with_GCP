# Specifies base image and tag
FROM gcr.io/deeplearning-platform-release/pytorch-cpu:latest

SHELL ["/bin/bash", "-c"]

#RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
#/bin/bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda && \
#rm Miniconda3-latest-Linux-x86_64.sh

RUN conda info -e

# defined channels for conda
RUN conda config --append channels defaults
RUN conda config --append channels conda-forge
RUN conda config --get channels

#adding the config file in the docker image
ADD environment.yml environment.yml
ADD base.yml base.yml

# checking that the file is now present 
RUN ls -la

# update conda
RUN conda update -n base conda -y
RUN conda env update --file base.yml

# add packagesin the base to be able to see the env
#RUN jupyter contrib nbextension install
#RUN jupyter nbextensions_configurator enable

# install extra conda packages
RUN conda env create -f environment.yml -n env_gcp_dl

RUN conda info -e

# clean all downloaded packages
RUN conda clean -a -y

# setup the proxy to run on our subnet (conda)
RUN conda config --set proxy_servers.http http://10.140.60.40:8080 
RUN conda config --set proxy_servers.https http://10.140.60.40:8080
RUN conda config --set ssl_verify false 

# check that the config file was created properly
RUN conda config --get channels
RUN conda config --get ssl_verify
RUN conda config --get proxy_servers.http
RUN conda config --get proxy_servers.https

# setup the proxy to run on our subnet (pip and other)
#ENV http_proxy http://10.140.60.40:8080 
#ENV https_proxy http://10.140.60.40:8080
# add pip config file
ADD pip.conf $HOME/pip.conf
ENV PIP_CONFIG_FILE $HOME/pip.conf
   
RUN git config --global user.name "Fabien Tarrade"
RUN git config --global user.email "fabien.tarrade@axa-winterthur.ch"
RUN git config --global https.proxy http://10.140.60.40:8080
RUN git config --global https.sslVerify false
RUN git config --global http.proxy http://10.140.60.40:8080
RUN git config --global http.sslVerify false
#RUN git config --global https.https://github.axa.com.proxy
RUN git config --global https.https://github.axa.com.sslVerify false
#RUN git config --global http.https://github.axa.com.proxy 
RUN git config --global http.https://github.axa.com.sslVerify false

RUN git config --global core.autocrlf true
RUN git config --global core.filemode false

#adding the config file in the docker image
RUN mkdir -p /root/.ssh/
ADD known_hosts /root/.ssh/known_hosts
ADD id_rsa /root/.ssh/id_rsa

RUN conda init

RUN cat /etc/shells

RUN echo $0

#RUN /bin/sh  ~/.bashrc

RUN conda list

#RUN conda activate base
#RUN conda activate env_gcp_dl

RUN /root/miniconda3/envs/env_gcp_dl/bin/python -m ipykernel install --name 'env_gcp_dl' --display-name "Py36_env_gcp_dl"
RUN /root/miniconda3/bin/python -m ipykernel install --name 'base' --display-name "Py_36_base"

RUN ps | grep `echo $$` | awk '{ print $4 }'
RUN exec bash
RUN ps | grep `echo $$` | awk '{ print $4 }'
RUN uname -a

RUN jupyter lab build


#RUN hostnamectl

#WORKDIR /home/jupyter
#ENTRYPOINT ["/bin/bash"]